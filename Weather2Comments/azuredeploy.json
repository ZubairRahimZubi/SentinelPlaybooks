{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "",
        "description":  "",
        "prerequisites":  "",
        "postDeployment":  [
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "",
        "entities":  [
        ],
        "tags":  [
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  ""
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "Weather2Comments",
            "type":  "string"
        },
        "Resource Group Name":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for Resource Group Name"
            }
        },
        "Subscription ID":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for Subscription ID"
            }
        },
        "Weather API":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for Weather API"
            }
        }
    },
    "variables":  {
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        },
                        "Resource Group Name":  {
                            "defaultValue":  "[parameters('Resource Group Name')]",
                            "type":  "string"
                        },
                        "Subscription ID":  {
                            "defaultValue":  "[parameters('Subscription ID')]",
                            "type":  "string"
                        },
                        "Weather API":  {
                            "defaultValue":  "[parameters('Weather API')]",
                            "type":  "string"
                        }
                    },
                    "triggers":  {
                        "When_a_response_to_an_Azure_Sentinel_alert_is_triggered":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path":  "/subscribe"
                            }
                        }
                    },
                    "actions":  {
                        "Alert_-_Get_incident":  {
                            "runAfter":  {
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method":  "get",
                                "path":  "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                            }
                        },
                        "Entities_-_Get_IPs_2":  {
                            "runAfter":  {
                                "Alert_-_Get_incident":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "@triggerBody()?['Entities']",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel_4']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/entities/ip"
                            }
                        },
                        "For_each":  {
                            "foreach":  "@body('Entities_-_Get_IPs_2')?['IPs']",
                            "actions":  {
                                "Add_comment_to_incident_(V3)":  {
                                    "runAfter":  {
                                        "Parse_JSON_2":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "incidentArmId":  "@body('Alert_-_Get_incident')?['id']",
                                            "message":  "\u003cp\u003eIP Address @{items('For_each')?['Address']} is located in @{body('Parse_JSON')?['city']}, @{body('Parse_JSON')?['regionName']} @{body('Parse_JSON')?['country']} and is attributed to @{body('Parse_JSON')?['isp']}.\u003cbr\u003e\n\u003cbr\u003e\nIt is @{body('Parse_JSON_2')?['current']?['temp_f']}\u0026nbsp;degrees and @{body('Parse_JSON_2')?['current']?['condition']?['text']}.\u003cbr\u003e\n\u003cbr\u003e\n![Alt text](https://@{body('Parse_JSON_2')?['current']?['condition']?['icon']})\u003cbr\u003e\n\u003cbr\u003e\n\u003c/p\u003e"
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/Incidents/Comment"
                                    }
                                },
                                "HTTP":  {
                                    "runAfter":  {
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "method":  "GET",
                                        "uri":  "http://ip-api.com/json/@{items('For_each')?['Address']}"
                                    }
                                },
                                "HTTP_2":  {
                                    "runAfter":  {
                                        "Parse_JSON":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "method":  "GET",
                                        "uri":  "https://api.weatherapi.com/v1/current.json?key=@{parameters('Weather API')}\u0026q=@{body('Parse_JSON')?['zip']}\u0026aqi=no"
                                    }
                                },
                                "Parse_JSON":  {
                                    "runAfter":  {
                                        "HTTP":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('HTTP')",
                                        "schema":  {
                                            "properties":  {
                                                "as":  {
                                                    "type":  "string"
                                                },
                                                "city":  {
                                                    "type":  "string"
                                                },
                                                "country":  {
                                                    "type":  "string"
                                                },
                                                "countryCode":  {
                                                    "type":  "string"
                                                },
                                                "isp":  {
                                                    "type":  "string"
                                                },
                                                "lat":  {
                                                    "type":  "number"
                                                },
                                                "lon":  {
                                                    "type":  "number"
                                                },
                                                "org":  {
                                                    "type":  "string"
                                                },
                                                "query":  {
                                                    "type":  "string"
                                                },
                                                "region":  {
                                                    "type":  "string"
                                                },
                                                "regionName":  {
                                                    "type":  "string"
                                                },
                                                "status":  {
                                                    "type":  "string"
                                                },
                                                "timezone":  {
                                                    "type":  "string"
                                                },
                                                "zip":  {
                                                    "type":  "string"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                },
                                "Parse_JSON_2":  {
                                    "runAfter":  {
                                        "HTTP_2":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('HTTP_2')",
                                        "schema":  {
                                            "properties":  {
                                                "current":  {
                                                    "properties":  {
                                                        "cloud":  {
                                                            "type":  "integer"
                                                        },
                                                        "condition":  {
                                                            "properties":  {
                                                                "code":  {
                                                                    "type":  "integer"
                                                                },
                                                                "icon":  {
                                                                    "type":  "string"
                                                                },
                                                                "text":  {
                                                                    "type":  "string"
                                                                }
                                                            },
                                                            "type":  "object"
                                                        },
                                                        "feelslike_c":  {
                                                            "type":  "number"
                                                        },
                                                        "feelslike_f":  {
                                                            "type":  "number"
                                                        },
                                                        "gust_kph":  {
                                                            "type":  "number"
                                                        },
                                                        "gust_mph":  {
                                                            "type":  "number"
                                                        },
                                                        "humidity":  {
                                                            "type":  "integer"
                                                        },
                                                        "is_day":  {
                                                            "type":  "integer"
                                                        },
                                                        "last_updated":  {
                                                            "type":  "string"
                                                        },
                                                        "last_updated_epoch":  {
                                                            "type":  "integer"
                                                        },
                                                        "precip_in":  {
                                                            "type":  "integer"
                                                        },
                                                        "precip_mm":  {
                                                            "type":  "integer"
                                                        },
                                                        "pressure_in":  {
                                                            "type":  "number"
                                                        },
                                                        "pressure_mb":  {
                                                            "type":  "integer"
                                                        },
                                                        "temp_c":  {
                                                            "type":  "number"
                                                        },
                                                        "temp_f":  {
                                                            "type":  "number"
                                                        },
                                                        "uv":  {
                                                            "type":  "integer"
                                                        },
                                                        "vis_km":  {
                                                            "type":  "integer"
                                                        },
                                                        "vis_miles":  {
                                                            "type":  "integer"
                                                        },
                                                        "wind_degree":  {
                                                            "type":  "integer"
                                                        },
                                                        "wind_dir":  {
                                                            "type":  "string"
                                                        },
                                                        "wind_kph":  {
                                                            "type":  "number"
                                                        },
                                                        "wind_mph":  {
                                                            "type":  "number"
                                                        }
                                                    },
                                                    "type":  "object"
                                                },
                                                "location":  {
                                                    "properties":  {
                                                        "country":  {
                                                            "type":  "string"
                                                        },
                                                        "lat":  {
                                                            "type":  "number"
                                                        },
                                                        "localtime":  {
                                                            "type":  "string"
                                                        },
                                                        "localtime_epoch":  {
                                                            "type":  "integer"
                                                        },
                                                        "lon":  {
                                                            "type":  "number"
                                                        },
                                                        "name":  {
                                                            "type":  "string"
                                                        },
                                                        "region":  {
                                                            "type":  "string"
                                                        },
                                                        "tz_id":  {
                                                            "type":  "string"
                                                        }
                                                    },
                                                    "type":  "object"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "Entities_-_Get_IPs_2":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach",
                            "runtimeConfiguration":  {
                                "concurrency":  {
                                    "repetitions":  1
                                }
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azuresentinel":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "azuresentinel_4":  {
                                "connectionId":  "/subscriptions/2959f496-711b-447e-9b85-53a1da341c4c/resourceGroups/RodAzureSentinel/providers/Microsoft.Web/connections/azuresentinel-30",
                                "connectionName":  "azuresentinel-30",
                                "id":  "/subscriptions/2959f496-711b-447e-9b85-53a1da341c4c/providers/Microsoft.Web/locations/eastus/managedApis/azuresentinel"
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "LogicAppsCategory":  "security",
                "hidden-SentinelTemplateName":  "Weather2Comments",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        }
    ]
}
